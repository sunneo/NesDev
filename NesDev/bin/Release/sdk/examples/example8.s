;
; File generated by cc65 v 2.13.3
;
	.fopt		compiler,"cc65 v 2.13.3"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank, tmp1, ptr1, ptr2
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_pal_col
	.import		_ppu_wait_frame
	.import		_ppu_on_all
	.import		_music_play
	.import		_music_stop
	.import		_music_pause
	.import		_sfx_play
	.import		_pad_trigger
	.import		_vram_adr
	.import		_vram_put
	.export		_put_str
	.export		_main

.segment	"RODATA"

L0001:
	.byte	$4D,$55,$53,$49,$43,$20,$41,$4E,$53,$20,$53,$46,$58,$20,$45,$58
	.byte	$41,$4D,$50,$4C,$45,$00,$41,$20,$20,$20,$20,$20,$54,$4F,$20,$50
	.byte	$4C,$41,$59,$20,$4D,$55,$53,$49,$43,$00,$42,$20,$20,$20,$20,$20
	.byte	$54,$4F,$20,$53,$54,$4F,$50,$20,$4D,$55,$53,$49,$43,$00,$53,$54
	.byte	$41,$52,$54,$20,$54,$4F,$20,$50,$41,$55,$53,$45,$20,$4D,$55,$53
	.byte	$49,$43,$00,$44,$2D,$50,$41,$44,$20,$54,$4F,$20,$50,$4C,$41,$59
	.byte	$20,$53,$46,$58,$00

; ---------------------------------------------------------------
; void __near__ put_str (unsigned int, __near__ const unsigned char*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_put_str: near

.segment	"CODE"

;
; vram_adr(adr);
;
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _vram_adr
;
; if(!*str) break;
;
L0005:	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	jeq     incsp4
;
; vram_put((*str++)-0x20);//-0x20 because ASCII code 0x20 is placed in tile 0 of the CHR
;
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L000D
	inx
L000D:	jsr     stax0sp
	ldy     #$00
	lda     (regsave),y
	sec
	sbc     #$20
	jsr     _vram_put
;
; }
;
	jmp     L0005

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"BSS"

L0010:
	.res	1,$00
L0011:
	.res	1,$00

.segment	"CODE"

;
; pause=FALSE;
;
	lda     #$00
	sta     L0011
;
; pal_col(1,0x30);//set while color
;
	lda     #$01
	jsr     pusha
	lda     #$30
	jsr     _pal_col
;
; put_str(NTADR_A(2,2),"MUSIC ANS SFX EXAMPLE");
;
	jsr     decsp4
	lda     #$42
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$20
	sta     (sp),y
	lda     #<(L0001)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L0001)
	sta     (sp),y
	jsr     _put_str
;
; put_str(NTADR_A(2,4),"A     TO PLAY MUSIC");
;
	jsr     decsp4
	lda     #$82
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$20
	sta     (sp),y
	lda     #<(L0001+22)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L0001+22)
	sta     (sp),y
	jsr     _put_str
;
; put_str(NTADR_A(2,5),"B     TO STOP MUSIC");
;
	jsr     decsp4
	lda     #$A2
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$20
	sta     (sp),y
	lda     #<(L0001+42)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L0001+42)
	sta     (sp),y
	jsr     _put_str
;
; put_str(NTADR_A(2,6),"START TO PAUSE MUSIC");
;
	jsr     decsp4
	lda     #$C2
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$20
	sta     (sp),y
	lda     #<(L0001+62)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L0001+62)
	sta     (sp),y
	jsr     _put_str
;
; put_str(NTADR_A(2,8),"D-PAD TO PLAY SFX");
;
	jsr     decsp4
	lda     #$02
	tay
	sta     (sp),y
	iny
	lda     #$21
	sta     (sp),y
	lda     #<(L0001+83)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L0001+83)
	sta     (sp),y
	jsr     _put_str
;
; ppu_on_all();//enable rendering
;
	jsr     _ppu_on_all
;
; ppu_wait_frame();
;
L0040:	jsr     _ppu_wait_frame
;
; i=pad_trigger(0);
;
	lda     #$00
	jsr     _pad_trigger
	sta     L0010
;
; if(i&PAD_A)
;
	and     #$01
	beq     L0047
;
; music_play(0);
;
	lda     #$00
	jsr     _music_play
;
; pause=FALSE;
;
	lda     #$00
	sta     L0011
;
; if(i&PAD_B)
;
L0047:	lda     L0010
	and     #$02
	beq     L004D
;
; music_stop();
;
	jsr     _music_stop
;
; pause=FALSE;
;
	lda     #$00
	sta     L0011
;
; if(i&PAD_START)
;
L004D:	lda     L0010
	and     #$08
	beq     L0052
;
; pause^=TRUE;
;
	lda     L0011
	eor     #$01
	sta     L0011
;
; music_pause(pause);
;
	jsr     _music_pause
;
; if(i&PAD_LEFT)  sfx_play(0,0);
;
L0052:	lda     L0010
	and     #$40
	beq     L0058
	lda     #$00
	jsr     pusha
	jsr     _sfx_play
;
; if(i&PAD_RIGHT) sfx_play(1,1);
;
L0058:	lda     L0010
	and     #$80
	beq     L005D
	lda     #$01
	jsr     pusha
	jsr     _sfx_play
;
; if(i&PAD_UP)    sfx_play(2,2);
;
L005D:	lda     L0010
	and     #$10
	beq     L0062
	lda     #$02
	jsr     pusha
	jsr     _sfx_play
;
; if(i&PAD_DOWN)  sfx_play(3,3);
;
L0062:	lda     L0010
	and     #$20
	beq     L0040
	lda     #$03
	jsr     pusha
	jsr     _sfx_play
;
; }
;
	jmp     L0040

.endproc

